{
    "openapi": "3.0.0",
    "info": {
        "title": "BookStore CRUD API",
        "description": "This is a simple API documentation for demonstration of CRUD operation of Bookstore.",
        "contact": {
            "name": "Muhammad Haider",
            "email": "haadi.javaid@gmail.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/v1/auth/registerAuthor": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new Author",
                "description": "Registers a new Author and returns an access token.",
                "operationId": "registerAuthor",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/auth/registerCollaborator": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new Collaborator",
                "description": "Registers a new Collaborator and returns an access token.",
                "operationId": "registerCollaborator",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login as a user",
                "description": "Logs in a user and returns an access token.",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "author@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/books/add": {
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "description": "Creates a new book record",
                "operationId": "createBook",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Sample Book"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A brief description of the book."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    },
                    {
                        "X-XSRF-TOKEN": []
                    }
                ]
            }
        },
        "/api/v1/books/view": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get a specific book",
                "description": "Retrieves information about a specific book",
                "operationId": "getBook",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "query",
                        "description": "ID of the book to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book retrieved successfully"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/books/edit/{book_id}": {
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Update a specific book",
                "description": "Updates information about a specific book",
                "operationId": "updateBook",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "path",
                        "description": "ID of the book to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated book data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Book Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Book updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden (not the book owner)"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/books/delete/{book_id}": {
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete a specific book",
                "description": "Deletes a specific book",
                "operationId": "deleteBook",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "path",
                        "description": "ID of the book to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden (not the book owner)"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/section/add": {
            "post": {
                "tags": [
                    "Sections"
                ],
                "summary": "Create a new section",
                "description": "Create a new section with the provided title, description, and book_id.",
                "operationId": "storeSection",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "book_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Section Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Section Description"
                                    },
                                    "book_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Section created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Section added successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Permission Denied"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/subsection/add": {
            "post": {
                "tags": [
                    "Subsections"
                ],
                "summary": "Create a new sub-section",
                "description": "Creates a new sub-section within a section",
                "operationId": "createSubSection",
                "requestBody": {
                    "description": "Sub-section data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Sub-Section Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A brief description of the sub-section."
                                    },
                                    "book_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "parent_id": {
                                        "description": "ID of the parent section (optional)",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sub-section created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Sub-section added successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission Denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Permission Denied"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parent Section Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Parent section not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Error try again later!"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/section/update": {
            "post": {
                "tags": [
                    "Sections"
                ],
                "summary": "Update an existing section",
                "description": "Updates an existing section's title and description",
                "operationId": "updateSection",
                "requestBody": {
                    "description": "Section data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "111"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Section Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description of the section."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Section updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Section updated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission Denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Permission Denied"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Section Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Section not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            },
            "0": []
        }
    }
}